Script started on 2020ÎÖÑ 11Ïõî 09Ïùº (Ïõî) Ïò§Ï†Ñ 10Ïãú 06Î∂Ñ 06Ï¥à
[?1034hnetpa15@~/ 825$ cat prog/udp_talkserv.c
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <unistd.h>
#include <time.h>

char *EXIT_STRING="exit";

int check=0;

#define MAXLINE 511

int main(int argc, char *argv[]) {
       struct sockaddr_in cliaddr, servaddr;
       int s;
       pid_t pid;
       if(argc != 2) {
               printf("ÏÇ¨Ïö©Î≤ï: %s port\n", argv[0]);
               exit(0);
       }
       if((s = socket(PF_INET, SOCK_DGRAM, 0)) < 0) {
               perror("socket fail\n");
               exit(0);
       }
       bzero((char *)&servaddr, sizeof(servaddr));
       bzero((char *)&cliaddr, sizeof(cliaddr));
       servaddr.sin_family = AF_INET;
       servaddr.sin_addr.s_addr = htonl(INADDR_ANY);
       servaddr.sin_port = htons(atoi(argv[1]));
       puts("ÏÑúÎ≤ÑÍ∞Ä ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Î•º Í∏∞Îã§Î¶¨Í≥† ÏûàÏäµÎãàÎã§.");
       if(bind(s, (struct sockaddr *)&servaddr, sizeof(servaddr)) < 0) {
               perror("bind fail\n");
               exit(0);
       }
       puts("ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Í∞Ä Ïó∞Í≤∞ÎêòÏóàÏäµÎãàÎã§.");
       recv_and_print(s, &cliaddr);
       if((pid = fork()) > 0) {
               input_and_send(s, &cliaddr);
       } else if(pid == 0) {
               recv_and_print(s, &cliaddr); 
       }
       close(s);
       return 0;
}
int input_and_send(int sd, struct sockaddr_in* servaddr) {
       char buf[MAXLINE + 1];
       int nbyte, addrlen = sizeof(struct sockaddr_in);
       while(fgets(buf, sizeof(buf), stdin) != NULL) {
               nbyte = strlen(buf);
               if(sendto(sd, buf, strlen(buf), 0, (struct sockaddr *)servaddr, addrlen) <0)
                       perror("sendto fail");
               if(strstr(buf, EXIT_STRING) != NULL) {
                       puts("Good Bye!");
                       close(sd);
                       exit(0);
               }
       }
       return 0;
}
int recv_and_print(int sd, struct sockaddr_in* servaddr) {
       char buf[MAXLINE + 1];
       int nbyte, addrlen = sizeof(struct sockaddr_in);
       while(1) {
               if((nbyte = recvfrom(sd, buf, MAXLINE, 0, (struct sockaddr *)servaddr, &addrlen)) < 0) {
                       perror("read fail");
                       close(sd);
                       exit(0);
               }
               buf[nbyte] = 0;
               if(strstr(buf, EXIT_STRING) != NULL) {
                       break;
               }
               printf("%s", buf);
if (check==0){
check+=1;
break;
}
}
return 0;
}
netpa15@~/ 826$ cat prog/udp_talkcli.c
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <unistd.h>

#define MAXLINE 511

char *EXIT_STRING = "exit"; 

int main(int argc, char *argv[]) {
        pid_t pid;
        static int s;
        static struct sockaddr_in servaddr;

        if(argc != 3) {
                printf("ÏÇ¨Ïö©Î≤ï: %s server_ip port\n", argv[0]);
                exit(0);
        }
        if((s = socket(PF_INET, SOCK_DGRAM, 0)) < 0) {
                printf("Client: Can't open dgram socket.\n");
                exit(0);
        }
        bzero((char *)&servaddr, sizeof(servaddr));
        servaddr.sin_family = AF_INET;
        inet_pton(AF_INET, argv[1], &servaddr.sin_addr);
        servaddr.sin_port = htons(atoi(argv[2]));
        if((pid = fork()) > 0) { 
                input_and_send(s, &servaddr);
        } else if(pid == 0) { 
                recv_and_print(s, &servaddr);
        }
        close(s);
        return 0;
}
int input_and_send(int sd, struct sockaddr_in *servaddr) {
        char buf[MAXLINE + 1];
        int nbyte, addrlen = sizeof(struct sockaddr_in);
        while(fgets(buf, sizeof(buf), stdin) != NULL) {
                nbyte = strlen(buf);
                if(sendto(sd, buf, strlen(buf), 0, (struct sockaddr *)servaddr, addrlen) < 0)
                        perror("sendto fail\n");
                if(strstr(buf, EXIT_STRING) != NULL) {
                        puts("Good Bye!");
                        close(sd);
                        exit(0);
                }
        }
        return 0;
}
int recv_and_print(int sd, struct sockaddr_in *servaddr) {
        char buf[MAXLINE + 1];
        int nbyte, addrlen = sizeof(struct sockaddr_in);
        while(1) {
                if((nbyte = recvfrom(sd, buf, MAXLINE, 0, (struct sockaddr *)servaddr, &addrlen)) < 0) {
                        perror("read fail");
                        close(sd);
                        exit(0);
                }
                buf[nbyte] = 0;
                if(strstr(buf, EXIT_STRING) != NULL) {
                        break;
                }
                printf("%s", buf); 
        }
        return 0;

}
netpa15@~/ 827$ prog/udp_talkcli[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K
netpa15@~/ 827$ ./pro[K[K[K[K[K
netpa15@~/ 827$ prog./[K[K/[K./udp_talkcli 117[C[1P[1P[1@/[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K./prog/udp_talkcli 117.17.142.162 8015
bash: prog/udp_talkcli./prog/udp_talkcli: Í∑∏Îü∞ ÌååÏùºÏù¥ÎÇò ÎîîÎ†âÌÑ∞Î¶¨Í∞Ä ÏóÜÏäµÎãàÎã§
netpa15@~/ 828$ prog/udp_talkcli./prog/udp_talkcli 117.17.142.162 8015[C[C[C[C[C[C[C[K
netpa15@~/ 828$ prog/./udp_talkcli 117.17/[K.142.162 8015
2017301004
receive Ok
exit
Good Bye!
netpa15@~/ 829$ ls -l prog/udp_talk*
-rwxr-xr-x. 1 netpa15 student 13552 11Ïõî  9 09:41 prog/udp_talkcli
-rw-r--r--. 1 netpa15 student  2229 11Ïõî  9 09:40 prog/udp_talkcli.c
-rwxr-xr-x. 1 netpa15 student 13560 11Ïõî  9 10:02 prog/udp_talkserv
-rw-r--r--. 1 netpa15 student  2539 11Ïõî  9 10:02 prog/udp_talkserv.c
-rwxr-xr-x. 1 netpa15 student 13528 11Ïõî  9 09:58 prog/udp_talkserv1
-rw-r--r--. 1 netpa15 student  2482 11Ïõî  9 09:57 prog/udp_talkserv1.c
netpa15@~/ 830$ d[K
netpa15@~/ 830$ exit

Script done on 2020ÎÖÑ 11Ïõî 09Ïùº (Ïõî) Ïò§Ï†Ñ 10Ïãú 09Î∂Ñ 54Ï¥à
